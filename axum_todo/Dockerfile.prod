# syntax=docker/dockerfile:1
FROM rust:1.67

ARG USER_ID
ARG GROUP_ID
ARG USER_NAME
ARG APP_EARTH_PATH
ARG APP_NAME

EXPOSE 3000

ENV LANG C.UTF-8

RUN ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN <<EOT
  #!/bin/bash
  pwd
  if [ -z "$(ls -l)" ];then
    echo "failure mount."
    exit 1
  fi
EOT

RUN <<EOT
  groupadd -g $GROUP_ID $USER_NAME || :
  useradd -l -u $USER_ID -g $GROUP_ID -s /bin/bash -m $USER_NAME || :
  chown -R $USER_NAME /home/$USER_NAME
  #if [ -z "$(ls -ld /home/$USER_NAME | grep $USER_NAME)" ];then
  if [[ "$(find /home/$USER_NAME ! -user $USER_NAME)" ]];then
    echo "Failure chown /home/$USER_NAME $USER_NAME."
    exit 1
  fi
EOT

# for Rust develop-environment
RUN <<EOT
  set -eux
  apt-get update
  apt-get upgrade -y
EOT

WORKDIR ${APP_EARTH_PATH}
RUN <<EOT
  #!/bin/bash
  mkdir -p ${APP_NAME}/target/release
  chown -R ${USER_NAME} ${APP_EARTH_PATH}
EOT

COPY ./target/release/${APP_NAME} ./${APP_NAME}/target/release/
RUN chown ${USER_NAME} ./${APP_NAME}/target/release/${APP_NAME}
USER $USER_NAME
WORKDIR ${APP_EARTH_PATH}/${APP_NAME}
RUN <<EOT
#!/bin/bash
set -eux
if [ ! -f ./target/release/${APP_NAME} ];then
  echo "exe not found."
  exit 1
fi
ls -l ./target/release/${APP_NAME}
EOT

CMD ["./target/release/axum_todo"]
